[gd_resource type="VisualShader" load_steps=12 format=2]

[ext_resource path="res://Planet/Clouds.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorUniform" id=1]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarOp" id=8]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Speed"

[resource]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx, unshaded;

uniform vec4 Color : hint_color;
uniform float Speed;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:10
	vec3 n_out10p0 = Color.rgb;
	float n_out10p1 = Color.a;

// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out4p0.x;
	float n_out5p1 = n_out4p0.y;
	float n_out5p2 = n_out4p0.z;

// Input:3
	float n_out3p0 = TIME;

// ScalarUniform:9
	float n_out9p0 = Speed;

// ScalarOp:8
	float n_out8p0 = n_out3p0 * n_out9p0;

// ScalarOp:7
	float n_out7p0 = n_out5p0 + n_out8p0;

// VectorCompose:6
	float n_in6p2 = 0.00000;
	vec3 n_out6p0 = vec3(n_out7p0, n_out5p1, n_in6p2);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out6p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// ScalarOp:11
	float n_out11p0 = n_out10p1 * dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));

// Output:0
	ALBEDO = n_out10p0;
	ALPHA = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1130, -31 )
modes/cull = 2
flags/unshaded = true
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -60, 160 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -920, 420 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( -1000, 280 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( -780, 280 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( -320, 280 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( -520, 220 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( -740, 420 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( -940, 500 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -60, 40 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 200, 180 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 5, 1, 6, 1, 5, 0, 7, 0, 6, 0, 2, 0, 7, 0, 6, 0, 3, 0, 8, 0, 9, 0, 8, 1, 8, 0, 7, 1, 10, 0, 0, 0, 10, 1, 11, 0, 2, 0, 11, 1, 11, 0, 0, 1 )
